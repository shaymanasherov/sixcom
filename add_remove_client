using namespace std;
#include <stdio.h>
#include <time.h>
#include <iostream>
#include <fstream>
#include <string>

typedef struct Client
{
	char id[10];
	char name[40];
	char phone[11];
	char status[35];
	char email[40];
	Client* next = nullptr;
}Client;

typedef struct
{
	Client* head = nullptr;
	int size = 0;

}ClientList;

/*returns true if the list is empty*/
bool cl_isEmpty(ClientList cl)
{
	return !(cl.size > 0);
}
/*pushes a new object to the head of the list*/
void cl_prepend(Client* c, ClientList* cl)
{
	c->next = cl->head;
	cl->head = c;
	++cl->size;
}
/*pushes a new object to the tail of the list*/
void cl_append(Client* c, ClientList* cl)
{
	if (!cl_isEmpty(*cl))
	{
		Client* last = cl->head;
		for (int i = 0; i < cl->size - 1; i++)
		{
			last = last->next;
		}
		last->next = c;
		++cl->size;
	}
	else
		cl_prepend(c, cl);

}
/*gets an object from the list by index*/
Client* cl_get(int index, const ClientList* cl)
{
	Client* c = cl->head;
	while (c && index--) {
		c = c->next;
	}
	return c;
}
/*removes an object from the list by index*/
void cl_remove(int index, ClientList* cl) {
	Client* toDelete;

	if (index == 0) {
		toDelete = cl->head;
		cl->head = cl->head->next;
	}
	else {
		Client* before = cl_get(index - 1, cl);
		toDelete = before->next;
		before->next = toDelete->next;
	}

	cl->size--;
	delete toDelete;
}
/*return list's size*/
unsigned cl_length(const ClientList* cl) {
	return cl->size;
}
/*transforms a clientlist to array and returns it*/
Client* cl_toArray(ClientList* cl)
{
	Client* arr = new Client[cl->size];
	for (int i = 0; i < cl->size; i++)
	{
		arr[i] = *(cl_get(i, cl));
	}

	return arr;
}

bool isExist(const char id[10], ClientList* list)
{
	Client* temp = list->head;
	for (int i = 0; i < list->size; i++)
	{
		if (strcmp(id, temp->id) == 0)
			return true;
		temp = temp->next;
	}
	return false;
}

void add_client(const char id[10], const char name[40], const char phone_num[11], const char status[35], const char email[40], ClientList* list)
{
	if (!isExist(id, list))
	{
		ofstream file;
		file.open("clients.txt", ios::app);

		if (file.is_open())
		{
			file << id << ",";
			file << name << ".";
			file << phone_num << "-";
			file << status << "/";
			file << email << "*";
			file << "\n";
		}
		file.close();

		Client* c = new Client;
		strcpy(c->id, id);
		strcpy(c->name, name);
		strcpy(c->phone, phone_num);
		strcpy(c->status, status);
		strcpy(c->email, email);

		cl_append(c, list);
	}
}

void delete_client(const char id[10], ClientList* list)
{
	ifstream file;
	ofstream temp;
	string line, idNumber;
	int index;

	file.open("clients.txt");
	temp.open("temp.txt");

	if (file.is_open() && temp.is_open())
	{
		while (!file.eof())
		{
			getline(file, line);
			index = line.find(",");
			idNumber = line.substr(0, index);
			if (idNumber != id)
				temp << line << endl;
		}

		file.close();
		temp.close();
		remove("clients.txt");
		rename("temp.txt", "clients.txt");
	}

	Client c;
	for (int i = 0; i < list->size; i++)
	{
		c = *cl_get(i, list);
		if (strcmp(c.id, id) == 0)
			cl_remove(i, list);
	}
}


ClientList * list_client() {
	int i, j;
	string line = " ", id, name, phone, ststus, email;

	ifstream file;
	file.open("clients.txt");

	ClientList* list = new ClientList;

	if (file.is_open())
	{
		while (!file.eof())
		{
			Client* c = new Client;
			getline(file, line);
			if (line != "")
			{
				i = line.find(',');
				strcpy(c->id, line.substr(0, i).c_str());
				j = line.find('.');
				strcpy(c->name, line.substr(i + 1, j - i - 1).c_str());
				i = line.find('-');
				strcpy(c->phone, line.substr(j + 1, i - j - 1).c_str());
				j = line.find('/');
				strcpy(c->status, line.substr(i + 1, j - i - 1).c_str());
				i = line.find('*');
				strcpy(c->email, line.substr(j + 1, i - j - 1).c_str());

				cl_append(c, list);
			}
		}

	}
	return list;
}

int main()
{
	ClientList* list = list_client();
	add_client("214324352", "ads fa", "0506644947", "active", "sdgg@gmail.com", list);
	add_client("315115454", "omer biton", "015614515", "active", "sdgg@gmail.com", list);
	add_client("20727645", "shirel biton", "12345", "active", "sdgg@gmail.com", list);
	add_client("31584556", "omer danieli", "48655", "active", "sdgg@gmail.com", list);

	delete_client("20727645", list);
	return 0;
}
